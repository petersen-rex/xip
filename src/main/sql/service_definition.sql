-- MySQL dump 10.13  Distrib 5.5.12, for osx10.6 (i386)
--
-- Host: localhost    Database: avayaetl
-- ------------------------------------------------------
-- Server version	5.5.12

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `service_definition`
--

DROP TABLE IF EXISTS `service_definition`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `service_definition` (
  `serviceName` varchar(50) DEFAULT NULL,
  `serviceType` varchar(4) DEFAULT NULL,
  `serviceProvider` longtext,
  `serviceAction` varchar(200) DEFAULT NULL,
  `serviceText` longtext,
  `serviceInputMappings` longtext,
  `serviceOutputMappings` longtext,
  `serviceRoles` longtext
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `service_definition`
--

LOCK TABLES `service_definition` WRITE;
/*!40000 ALTER TABLE `service_definition` DISABLE KEYS */;
INSERT INTO `service_definition` VALUES ('GetServiceRequests','wsdl','http://171.74.138.196:18007/arsys/services/ARService?server=171.74.138.197&webService=AOS_WS_GetSR','urn:AOS_WS_GetSR/SR_Details','<s11:Envelope xmlns:s11=\'http://schemas.xmlsoap.org/soap/envelope/\'>\n    <s11:Header><ns1:AuthenticationInfo xmlns:ns1=\'urn:AOS_WS_GetSR\'>\n        <ns1:userName>cportal</ns1:userName>\n        <ns1:password>cportal</ns1:password>\n        <ns1:authentication></ns1:authentication>\n        <ns1:locale></ns1:locale>\n        <ns1:timeZone></ns1:timeZone>\n    </ns1:AuthenticationInfo>\n    </s11:Header>\n    <s11:Body>\n        <ns1:SR_Details xmlns:ns1=\'urn:AOS_WS_GetSR\'>\n            <ns1:Qualification>\'Company\'=\\\"$company\\\"</ns1:Qualification>\n            <ns1:startRecord>$startRecord</ns1:startRecord>\n            <ns1:maxLimit>$maxLimit</ns1:maxLimit>\n        </ns1:SR_Details>\n    </s11:Body>\n</s11:Envelope>','company:string:true,startRecord:numeric:true,maxLimit:numeric:true','auto',NULL),('GetSites','jdbc','jdbc:mysql://localhost/avayaetl?useUnicode=true','','select * from reportlist','company:string:true','auto',NULL),('DynamicScript','scrp','','','// implicit objects: user, servlet, serviceDefinition, inputParameters, out\nimportPackage(java.io);\nimportPackage(java.lang);\nimportPackage(java.util);\nimportPackage(com.xtivia.xip.service);\nimportPackage(com.xtivia.xip.utils);\n\nvar obj={};\nobj.data=[];\nvar i=0;\n\nfor (i=0; i<10; i++){\n    var tRow = { name: \'name\' +i, address: \'Address\' + i};\n    obj.data.push(tRow);\n}\n\nobj.RowCount=10;\n\nvar json = JsonUtils.toJson(obj);\n\nout.println(json);\nSystem.out.println(\"testing\");\n\n','','',NULL),('LiferayUser','scrp','','','// implicit objects: user, servlet, serviceDefinition, inputParameters, out\nimportPackage(java.io);\nimportPackage(java.lang);\nimportPackage(java.util);\nimportPackage(com.xtivia.xip.service);\nimportPackage(com.xtivia.xip.utils);\nimportPackage(com.liferay.portal.service);\n\nvar userCount = UserLocalServiceUtil.getUsersCount();\n\nvar users = UserLocalServiceUtil.getUsers(1,userCount);\n\nvar obj={};\nobj.data=[];\n\n\nfor (var i=0; i < users.size(); i++){\n    var u = users.get(i);\n    var roles = u.getRoles();\n    var roleString = \"\";\n    for(var r=0; r < roles.size(); r++){\n        var role = roles.get(r);\n         roleString += (role.getName() + \", \");\n    }\n    obj.data.push({\n        userName: u.getFullName(),\n        userEmail: u.getDisplayEmailAddress(),\n        userRoles: roleString\n    });\n}\n\n\nobj.RowCount = users.size();\n\nout.println(JsonUtils.toJson(obj));\n','','',NULL),('WeatherServiceZip','scrp','test','test14','// implicit objects: user, servlet, serviceDefinition, inputParameters, out\nimportPackage(java.io);\nimportPackage(java.lang);\nimportPackage(java.util);\nimportPackage(com.xtivia.xip.service);\nimportPackage(com.xtivia.xip.utils);\n\nvar zip = inputParameters.get(\"zip\");\n\nvar zipJson = HttpUtils.doGet(\"http://api.wunderground.com/api/8bc5eff786750f50/geolookup/q/\"+zip+\".json\");\n\nout.println(zipJson);\n','zip:string:true','',NULL),('WeatherServiceConditions','scrp','test','test14','// implicit objects: user, servlet, serviceDefinition, inputParameters, out\nimportPackage(java.io);\nimportPackage(java.lang);\nimportPackage(java.util);\nimportPackage(com.xtivia.xip.service);\nimportPackage(com.xtivia.xip.utils);\n\nvar zipLocal = inputParameters.get(\"zip\");\n\nvar zipJson = XipService.exec(\"WeatherServiceZip\", user, servlet, {zip : zipLocal });\n\neval(\"var zipObj=\" + zipJson+\";\");\n\nvar city = zipObj.location.city.replace(/ /g, \"_\");\nvar state = zipObj.location.state;\n\nvar conJson = HttpUtils.doGet(\"http://api.wunderground.com/api/8bc5eff786750f50/geolookup/conditions/q/\" + state + \"/\" + city + \".json\");\n\nout.println(conJson);\n\n','zip:string:true','',NULL),('WeatherServiceConditions65721','scrp','test','test14','importPackage(java.io);\nimportPackage(java.lang);\nimportPackage(java.util);\nimportPackage(com.xtivia.xip.service);\nimportPackage(com.xtivia.xip.utils);\n\nout.println(servlet);\n\nvar json = XipService.exec(\"WeatherServiceConditions\", user, servlet, {zip : \"65721\" });\n\nout.println(json);\n\n\n','zip:string:true','',NULL),('GetSitesDecorated','scrp','','','// implicit objects: user, servlet, serviceDefinition, inputParameters, out\nimportPackage(java.io);\nimportPackage(java.lang);\nimportPackage(java.util);\nimportPackage(com.xtivia.xip.service);\nimportPackage(com.xtivia.xip.utils);\n\nvar response = XipService.exec(\"GetSites\", user, servlet, request,{company:\"Avaya Cust9\"});\n \neval(\"var obj=\" + response);\n\nfor(row in obj.data){\n  if(obj.data[row].site.indexOf(\'r\')>=0){  \n    obj.data[row].site +=\"-XIP!\";\n  }\n  /*\n  if(obj.data[row].country.indexOf(\'United States\')>=0){\n    delete(obj.data[row]);\n  }\n  */\n}\n\nvar json = JsonUtils.toJson(obj);\n\nout.println(json);\n','','',NULL),('header','scrp','','','// implicit objects: user, servlet, serviceDefinition, inputParameters, out\nimportPackage(java.io);\nimportPackage(java.lang);\nimportPackage(java.util);\nimportPackage(com.xtivia.xip.service);\nimportPackage(com.xtivia.xip.utils);\nimportPackage(com.liferay.portlet.journal.service);\nimportPackage(com.liferay.portal.kernel.util);\n\nvar divId = inputParameters.get(\"div\");\n\nvar content = HttpUtil.encodeURL(JournalArticleLocalServiceUtil.getArticleContent(10180, 1010, \"\", \"en\", themeDisplay), true);\n\nvar script = \"document.getElementById(\'\"+divId+\"\').innerHTML=decodeURIComponent(\'\" + content + \"\');\";\n\nout.println(\"window.onload=function(){\" + script + \"};\");\n\nSystem.out.println(JournalArticleLocalServiceUtil.getArticleContent(10180, 1010, \"\", \"en\", themeDisplay));','','',NULL),('LiferayOrganizations','scrp','','','// implicit objects: user, servlet, serviceDefinition, inputParameters, out\nimportPackage(java.io);\nimportPackage(java.lang);\nimportPackage(java.util);\nimportPackage(com.xtivia.xip.service);\nimportPackage(com.xtivia.xip.utils);\nimportPackage(com.liferay.portal.service);\n\n\nvar userCount = UserLocalServiceUtil.getUsersCount();\nvar orgCount = OrganizationLocalServiceUtil.getOrganizationsCount();\n\nvar users = UserLocalServiceUtil.getUsers(1,userCount);\n\nvar orgs = OrganizationLocalServiceUtil[\"getOrganizations(int,int)\"](-1,-1);\n\n\nvar obj={};\nobj.data=[];\n\nfor (var i=0; i < orgs.size(); i++){\n    var org = orgs.get(i);\n    \n    obj.data.push({\n       orgName : org.getName()\n    });\n}\n\n\nobj.RowCount = orgs.size();\n\nout.println(JsonUtils.toJson(obj));','','',NULL),('LRMyOrgs','scrp','','','// implicit objects: user, servlet, serviceDefinition, inputParameters, out\nimportPackage(java.io);\nimportPackage(java.lang);\nimportPackage(java.util);\nimportPackage(com.xtivia.xip.service);\nimportPackage(com.xtivia.xip.utils);\nimportPackage(com.liferay.portal.service);\n\n\n//var userCount = UserLocalServiceUtil.getUsersCount();\n//var orgCount = OrganizationLocalServiceUtil.getOrganizationsCount();\n\n//var users = UserLocalServiceUtil.getUsers(1,userCount);\n\n//var orgs = OrganizationLocalServiceUtil[\"getOrganizations(int,int)\"](-1,-1);\nvar orgs = user.getOrganizations();\n\n//out.println(\'Current User: \' + user.getFullName());\n\nvar obj={};\nobj.orgs=[];\n\n\nfor(var i=0;i<orgs.size();i++){\n  var org = orgs.get(i);\n  obj.orgs.push({\n    organizationId : org.organizationId,\n    name:org.name,\n    logoId:org.logoId\n  });\n}\n\nobj.RowCount = orgs.size();\n\nout.println(JsonUtils.toJson(obj));\n\n\n','','',NULL),('AddObj','scrp','test','test14','// implicit objects: user, servlet, serviceDefinition, inputParameters, out\nimportPackage(java.io);\nimportPackage(java.lang);\nimportPackage(java.util);\nimportPackage(com.xtivia.xip.service);\nimportPackage(com.xtivia.xip.utils);\n\nout.println(inputParameters);\n\n//var obj = inputParameters.get(\"obj\");\n//var toAdd = inputParameters.get(\"toAdd\");\n//var addName = inputParameters.get(\"addName\");\n\nout.println(\"***** IN ADDOBJ ***** \");\n\n//out.println(obj);\n//out.println(toAdd);\n//out.println(addName);\n\n//out.println(\"***** end ADDOBJ ***** \");\n','zip:string:true','',NULL),('CallAddObj','scrp','test','test14','importPackage(java.io);\nimportPackage(java.lang);\nimportPackage(java.util);\nimportPackage(com.xtivia.xip.service);\nimportPackage(com.xtivia.xip.utils);\n\nout.println(servlet);\n\nvar json = XipService.exec(\"AddObj\", user, servlet, request, {zip : \"65721\" });\n\nout.println(json);\n\n\n','zip:string:true','',NULL),('LRMyOrgRoles','scrp','','','// implicit objects: user, servlet, serviceDefinition, inputParameters, out\nimportPackage(java.io);\nimportPackage(java.lang);\nimportPackage(java.util);\nimportPackage(com.xtivia.xip.service);\nimportPackage(com.xtivia.xip.utils);\nimportPackage(com.liferay.portal.service);\n\nvar orgId = inputParameters.get(\"orgId\");\nvar org = OrganizationLocalServiceUtil.getOrganization(orgId);\n\n//out.println(org);\n//out.println(user.userId);\n//out.println(org.getGroupId());\n\nvar roles = RoleLocalServiceUtil[\'getUserGroupRoles(long,long)\'](user.userId, org.getGroupId());\n\nvar obj={};\nobj.roles=[];\n\n\nfor(var i=0;i<roles.size();i++){\n  var role = roles.get(i);\n  obj.roles.push({\n    name: role.name\n  });\n}\n\nobj.RowCount = roles.size();\n\nout.println(JsonUtils.toJson(obj));\n','','',NULL),('LROrgUsers','scrp','','','// implicit objects: user, servlet, serviceDefinition, inputParameters, out\nimportPackage(java.io);\nimportPackage(java.lang);\nimportPackage(java.util);\nimportPackage(com.xtivia.xip.service);\nimportPackage(com.xtivia.xip.utils);\nimportPackage(com.liferay.portal.service);\n\nvar orgId = inputParameters.get(\"orgId\");\nvar users = UserLocalServiceUtil.getOrganizationUsers(orgId);\n\nvar obj={};\nobj.users=[];\n\n\nfor(var i=0;i<users.size();i++){\n  var user = users.get(i);\n  obj.users.push({\n    name: user.fullName,\n    emailAddress: user.emailAddress\n  });\n}\n\nobj.RowCount = users.size();\n\nout.println(JsonUtils.toJson(obj));\n','','',NULL),('LRTest','scrp','','','// implicit objects: user, servlet, serviceDefinition, inputParameters, out\nimportPackage(java.io);\nimportPackage(java.lang);\nimportPackage(java.util);\nimportPackage(com.xtivia.xip.service);\nimportPackage(com.xtivia.xip.utils);\nimportPackage(com.liferay.portal.service);\n\n//out.println(users);\n\n//out.println(JsonUtils.toJson(obj));\n\nfor(var property in user){\n  if(typeof user[property] !=\'function\'){\n\n    out.print(property + \": \");\n    //out.print(typeof user[property]);\n    try {\n      out.print(user[property]);\n    } catch(e) {\n    }\n    out.println();\n  }\n}\n','','',NULL);
/*!40000 ALTER TABLE `service_definition` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2014-01-23 21:28:23
